


ARM Macro Assembler    Page 1 


    1 00000000         ;;UART0_RX  : PA0
    2 00000000         ;;UART0_TX  : PA1
    3 00000000         
    4 00000000         
    5 00000000         ;SYSCTL_BASE      EQU   0x400FE000
    6 00000000         
    7 00000000         ;RGGCGPIO_OFFSET     EQU   0x608 
    8 00000000         ;SYSCTL_RCGCGPIO_R    EQU   SYSCTL_BASE + RGGCGPIO_OFFSE
                       T
    9 00000000         
   10 00000000         ;RCGCUART_OFFSET     EQU  0x618
   11 00000000         ;SYSCTL_RCGCUART_R    EQU  SYSCTL_BASE + RCGCUART_OFFSET
                       
   12 00000000         
   13 00000000         ;GPIOA_BASE      EQU  0x40004000
   14 00000000         ; 
   15 00000000         
   16 00000000         ;GPIOA_DEN_OFFSET    EQU  0x51C
   17 00000000         ;GPIOA_DEN_R      EQU  GPIOA_BASE + GPIOA_DEN_OFFSET
   18 00000000         
   19 00000000         ;GPIOA_AFSEL_OFFSET    EQU  0x420
   20 00000000         ;GPIOA_AFSEL_R     EQU  GPIOA_BASE + GPIOA_AFSEL_OFFSET
   21 00000000         
   22 00000000         ;GPIOA_PCTL_OFFSET    EQU     0x52C
   23 00000000         ;GPIOA_PCTL_R     EQU  GPIOA_BASE + GPIOA_PCTL_OFFSET
   24 00000000         
   25 00000000         
   26 00000000         ;UART0_BASE      EQU  0x4000C000
   27 00000000         
   28 00000000         ;UART0_DR_OFFSET     EQU  0x000
   29 00000000         ;UART0_DR_R      EQU  UART0_BASE + UART0_DR_OFFSET
   30 00000000         
   31 00000000         ;UART0_FR_OFFSET     EQU  0x018
   32 00000000         ;UART0_FR_R      EQU  UART0_BASE +  UART0_FR_OFFSET
   33 00000000         
   34 00000000         ;UART0_IBRD_OFFSET    EQU  0x024
   35 00000000         ;UART0_IBRD_R     EQU  UART0_BASE + UART0_IBRD_OFFSET
   36 00000000         ; 
   37 00000000         
   38 00000000         ;UART0_FBRD_OFFSET    EQU  0x028
   39 00000000         ;UART0_FBRD_R     EQU  UART0_BASE + UART0_FBRD_OFFSET
   40 00000000         
   41 00000000         ;UART0_LCRH_OFFSET    EQU  0x02C
   42 00000000         ;UART0_LCRH_R     EQU  UART0_BASE + UART0_LCRH_OFFSET
   43 00000000         
   44 00000000         ;UART0_CTL_OFFSET    EQU  0x030
   45 00000000         ;UART0_CTL_R      EQU  UART0_BASE + UART0_CTL_OFFSET
   46 00000000         
   47 00000000         ;UART0_IM_OFFSET     EQU  0x038
   48 00000000         ;UART0_IM_R      EQU  UART0_BASE + UART0_IM_OFFSET
   49 00000000         
   50 00000000         ;UART0_IFLS_OFFSET    EQU  0x034
   51 00000000         ;UART0_IFLS_R     EQU  UART0_BASE + UART0_IFLS_OFFSET
   52 00000000         ; 
   53 00000000         ;UART0_RIS_OFFSET    EQU  0x03C
   54 00000000         ;UART0_RIS_R      EQU  UART0_BASE  + UART0_RIS_OFFSET
   55 00000000         
   56 00000000         ;UART0_ICR_OFFSET    EQU  0x044
   57 00000000         ;UART0_ICR_R      EQU  UART0_BASE  +  UART0_ICR_OFFSET



ARM Macro Assembler    Page 2 


   58 00000000         
   59 00000000         ;GPIOA_EN      EQU      1<<0
   60 00000000         ;UART0_EN      EQU   1<<0
   61 00000000         
   62 00000000         ;UART_FR_RXFE     EQU  0x00000010  ; receive fifo empty 
                       ?
   63 00000000         ;UART_LCRH_WLEN_8    EQU  0x00000060  ;  8-bit word leng
                       th
   64 00000000         ;UART_LCRH_FEN     EQU     0x00000010  ; enable fifo
   65 00000000         ;UART_CTL_UARTEN     EQU  0x00000001  ;  enable uart
   66 00000000         
   67 00000000         ;UART_IM_RTIM     EQU  0x00000040
   68 00000000         ; 
   69 00000000         ;CR  EQU  0x0D
   70 00000000         ;BS  EQU  0x08
   71 00000000         ;LF  EQU  0x0A
   72 00000000         ;ESC  EQU  0x1B
   73 00000000         ;SPA  EQU  0x20
   74 00000000         ;DEL     EQU  0x7F
   75 00000000         ; 
   76 00000000         
   77 00000000         ;       AREA   |.text|,CODE,READONLY,ALIGN=2
   78 00000000         ;       THUMB
   79 00000000         ;       
   80 00000000         ;       EXPORT UART_Init
   81 00000000         ;       EXPORT newline
   82 00000000         ;       EXPORT UART_ReadChar
   83 00000000         ;       EXPORT UART_WriteChar
   84 00000000         ; 
   85 00000000         ;       
   86 00000000         
   87 00000000         
   88 00000000         
   89 00000000         ;newline
   90 00000000         ;   PUSH {LR}
   91 00000000         ;   MOV  R0,#CR
   92 00000000         ;   BL  UART_WriteChar
   93 00000000         ;   MOV  R0,#LF
   94 00000000         ;   BL  UART_WriteChar
   95 00000000         ;   POP  {PC}
   96 00000000         
   97 00000000         ;UART_Init
   98 00000000         
   99 00000000         ;     PUSH   {LR}
  100 00000000         ;     
  101 00000000         ;     ;SYSCTL->RCGCUART |=UART0_EN
  102 00000000         ;     
  103 00000000         ;     LDR  R1,=SYSCTL_RCGCUART_R
  104 00000000         ;     LDR  R0,[R1]
  105 00000000         ;     ORR  R0,#UART0_EN
  106 00000000         ;     STR  R0,[R1]
  107 00000000         ;     
  108 00000000         ;     ;SYSCTL->RCGCGPIO |=GPIOA_EN
  109 00000000         ;     
  110 00000000         ;     LDR  R1,=SYSCTL_RCGCGPIO_R
  111 00000000         ;     LDR  R0,[R1]
  112 00000000         ;     ORR  R0,#GPIOA_EN
  113 00000000         ;     STR  R0,[R1]
  114 00000000         ;     



ARM Macro Assembler    Page 3 


  115 00000000         ;     
  116 00000000         ;     ;GPIOA->AFSEL  |=0x03
  117 00000000         ;     
  118 00000000         ;     LDR  R1,=GPIOA_AFSEL_R
  119 00000000         ;     LDR  R0,[R1]
  120 00000000         ;     ORR  R0,#0x03
  121 00000000         ;     STR  R0,[R1]
  122 00000000         ;     
  123 00000000         ;     
  124 00000000         ;     ;GPIOA->DEN |=0x3
  125 00000000         ;     
  126 00000000         ;     LDR  R1,=GPIOA_DEN_R
  127 00000000         ;     LDR  R0,[R1]
  128 00000000         ;     ORR  R0,#0x03
  129 00000000         ;     STR  R0,[R1]
  130 00000000         ;          ;GPIOA->PCTL &=~0x000000FF
  131 00000000         ;     
  132 00000000         ;     LDR  R1,=GPIOA_PCTL_R
  133 00000000         ;     LDR  R0,[R1]
  134 00000000         ;     BIC  R0,R0,#0x000000FF
  135 00000000         ;     ADD  R0,R0,#0x00000011
  136 00000000         ;     STR  R0,[R1]
  137 00000000         
  138 00000000         
  139 00000000         ;     LDR  R1,=UART0_CTL_R
  140 00000000         ;     LDR  R0,[R1]
  141 00000000         ;     BIC  R0,R0,#UART_CTL_UARTEN
  142 00000000         ;     STR  R0,[R1]
  143 00000000         ;     
  144 00000000         ;     
  145 00000000         ;     LDR  R1,=UART0_IBRD_R
  146 00000000         ;     ;baudrates :  9600,115200 etc
  147 00000000         ;     ; 16 000 000/ (16 * 115200) =  8.6805
  148 00000000         ;     MOV  R0,#8
  149 00000000         ;     STR  R0,[R1]
  150 00000000         ;     
  151 00000000         ;     LDR  R1,=UART0_FBRD_R
  152 00000000         ;     ; (0.6805 *64 *0.5) = 44.052
  153 00000000         ;     MOV  R0,#44
  154 00000000         ;     STR  R0,[R1]
  155 00000000         ;     
  156 00000000         ;     
  157 00000000         ;     LDR  R1,=UART0_LCRH_R
  158 00000000         ;     LDR  R0,[R1]
  159 00000000         ;     BIC  R0,R0,#0xFF
  160 00000000         ;     
  161 00000000         ;     ADD  R0,R0,#(UART_LCRH_WLEN_8 + UART_LCRH_FEN)
  162 00000000         ;     STR  R0,[R1]
  163 00000000         ;     
  164 00000000         ;     LDR  R1,=UART0_CTL_R
  165 00000000         ;     LDR  R0,[R1]
  166 00000000         ;     ORR  R0,#UART_CTL_UARTEN
  167 00000000         ;     STR  R0,[R1]
  168 00000000         ;    
  169 00000000         
  170 00000000         
  171 00000000         ;     POP  {PC}
  172 00000000         ;     
  173 00000000         ;     



ARM Macro Assembler    Page 4 


  174 00000000         ;UART_ReadChar
  175 00000000         ;    
  176 00000000         ;     LDR  R1,=UART0_FR_R
  177 00000000         ;     
  178 00000000         ;lp1     LDR  R2,[R1]
  179 00000000         ;     ANDS R2,#0x0010
  180 00000000         ;     BNE  lp1
  181 00000000         ;     
  182 00000000         ;     LDR  R1,=UART0_DR_R
  183 00000000         ;     LDR  R0,[R1]
  184 00000000         ;     BX  LR
  185 00000000         
  186 00000000         ;UART_WriteChar
  187 00000000         ;     LDR  R1,=UART0_FR_R
  188 00000000         ;     
  189 00000000         ;lp2     LDR  R2,[R1]
  190 00000000         ;     ANDS R2,#0x0020
  191 00000000         ;     BNE  lp2
  192 00000000         ;     
  193 00000000         ;     LDR  R1,=UART0_DR_R
  194 00000000         ;     STR  R0,[R1]
  195 00000000         ;     BX  LR
  196 00000000         ;     
  197 00000000         ;     ALIGN
  198 00000000         ;     END
  199 00000000         
  200 00000000         ; U0Rx (VCP receive) connected to PA0
  201 00000000         ; U0Tx (VCP transmit) connected to PA1
  202 00000000         
  203 00000000 00000020 
                       NVIC_EN0_INT5
                               EQU              0x00000020  ; Interrupt 5 enabl
                                                            e
  204 00000000 E000E100 
                       NVIC_EN0_R
                               EQU              0xE000E100  ; IRQ 0 to 31 Set E
                                                            nable Register
  205 00000000 E000E404 
                       NVIC_PRI1_R
                               EQU              0xE000E404  ; IRQ 4 to 7 Priori
                                                            ty Register
  206 00000000 40004420 
                       GPIO_PORTA_AFSEL_R
                               EQU              0x40004420
  207 00000000 4000451C 
                       GPIO_PORTA_DEN_R
                               EQU              0x4000451C
  208 00000000 40004528 
                       GPIO_PORTA_AMSEL_R
                               EQU              0x40004528
  209 00000000 4000452C 
                       GPIO_PORTA_PCTL_R
                               EQU              0x4000452C
  210 00000000 4000C000 
                       UART0_DR_R
                               EQU              0x4000C000
  211 00000000 4000C018 
                       UART0_FR_R
                               EQU              0x4000C018



ARM Macro Assembler    Page 5 


  212 00000000 4000C024 
                       UART0_IBRD_R
                               EQU              0x4000C024
  213 00000000 4000C028 
                       UART0_FBRD_R
                               EQU              0x4000C028
  214 00000000 4000C02C 
                       UART0_LCRH_R
                               EQU              0x4000C02C
  215 00000000 4000C030 
                       UART0_CTL_R
                               EQU              0x4000C030
  216 00000000 4000C034 
                       UART0_IFLS_R
                               EQU              0x4000C034
  217 00000000 4000C038 
                       UART0_IM_R
                               EQU              0x4000C038
  218 00000000 4000C03C 
                       UART0_RIS_R
                               EQU              0x4000C03C
  219 00000000 4000C044 
                       UART0_ICR_R
                               EQU              0x4000C044
  220 00000000 00000040 
                       UART_FR_RXFF
                               EQU              0x00000040  ; UART Receive FIFO
                                                             Full
  221 00000000 00000020 
                       UART_FR_TXFF
                               EQU              0x00000020  ; UART Transmit FIF
                                                            O Full
  222 00000000 00000010 
                       UART_FR_RXFE
                               EQU              0x00000010  ; UART Receive FIFO
                                                             Empty
  223 00000000 00000060 
                       UART_LCRH_WLEN_8
                               EQU              0x00000060  ; 8 bit word length
                                                            
  224 00000000 00000010 
                       UART_LCRH_FEN
                               EQU              0x00000010  ; UART Enable FIFOs
                                                            
  225 00000000 00000001 
                       UART_CTL_UARTEN
                               EQU              0x00000001  ; UART Enable
  226 00000000 00000000 
                       UART_IFLS_RX1_8
                               EQU              0x00000000  ; RX FIFO >= 1/8 fu
                                                            ll
  227 00000000 00000000 
                       UART_IFLS_TX1_8
                               EQU              0x00000000  ; TX FIFO <= 1/8 fu
                                                            ll
  228 00000000 00000040 
                       UART_IM_RTIM
                               EQU              0x00000040  ; UART Receive Time
                                                            -Out Interrupt



ARM Macro Assembler    Page 6 


  229 00000000         ; Mask
  230 00000000 00000020 
                       UART_IM_TXIM
                               EQU              0x00000020  ; UART Transmit Int
                                                            errupt Mask
  231 00000000 00000010 
                       UART_IM_RXIM
                               EQU              0x00000010  ; UART Receive Inte
                                                            rrupt Mask
  232 00000000 00000040 
                       UART_RIS_RTRIS
                               EQU              0x00000040  ; UART Receive Time
                                                            -Out Raw
  233 00000000         ; Interrupt Status
  234 00000000 00000020 
                       UART_RIS_TXRIS
                               EQU              0x00000020  ; UART Transmit Raw
                                                             Interrupt
  235 00000000         ; Status
  236 00000000 00000010 
                       UART_RIS_RXRIS
                               EQU              0x00000010  ; UART Receive Raw 
                                                            Interrupt
  237 00000000         ; Status
  238 00000000 00000040 
                       UART_ICR_RTIC
                               EQU              0x00000040  ; Receive Time-Out 
                                                            Interrupt Clear
  239 00000000 00000020 
                       UART_ICR_TXIC
                               EQU              0x00000020  ; Transmit Interrup
                                                            t Clear
  240 00000000 00000010 
                       UART_ICR_RXIC
                               EQU              0x00000010  ; Receive Interrupt
                                                             Clear
  241 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
  242 00000000 400FE618 
                       SYSCTL_RCGCUART_R
                               EQU              0x400FE618
  243 00000000         
  244 00000000         ; standard ASCII symbols
  245 00000000 0000000D 
                       CR      EQU              0x0D
  246 00000000 0000000A 
                       LF      EQU              0x0A
  247 00000000 00000008 
                       BS      EQU              0x08
  248 00000000 0000001B 
                       ESC     EQU              0x1B
  249 00000000 00000020 
                       SPA     EQU              0x20
  250 00000000 0000007F 
                       DEL     EQU              0x7F
  251 00000000         
  252 00000000         ; AREA    DATA, ALIGN=2
  253 00000000         



ARM Macro Assembler    Page 7 


  254 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
  255 00000000                 THUMB
  256 00000000         ;ENTRY
  257 00000000                 EXPORT           UART_Init
  258 00000000                 EXPORT           UART_ReadChar
  259 00000000                 EXPORT           UART_WriteChar
  260 00000000         ; require C function calls to preserve the 8-byte alignm
                       ent of 8-byte data objects
  261 00000000         
  262 00000000         ;PRESERVE8
  263 00000000         
  264 00000000         
  265 00000000         ;------------UART_Init------------
  266 00000000         ; Initialize UART0
  267 00000000         ; Baud rate is 115200 bits/sec
  268 00000000         ; Input: none
  269 00000000         ; Output: none
  270 00000000         ; Modifies: R0, R1
  271 00000000         ; Assumes: 16 MHz system clock
  272 00000000         UART_Init
  273 00000000 B500            PUSH             {LR}        ; save current valu
                                                            e of LR
  274 00000002         ; activate clock for UART0
  275 00000002 4929            LDR              R1, =SYSCTL_RCGCUART_R ; R1 = &
                                                            SYSCTL_RCGCUART_R
  276 00000004 6808            LDR              R0, [R1]    ; R0 = [R1]
  277 00000006 F040 0001       ORR              R0, R0, #0x01 ; enable UART0
  278 0000000A 6008            STR              R0, [R1]    ; [R1] = R0
  279 0000000C         ; activate clock for port A
  280 0000000C 4927            LDR              R1, =SYSCTL_RCGCGPIO_R ; R1 = &
                                                            SYSCTL_RCGCGPIO_R
  281 0000000E 6808            LDR              R0, [R1]    ; R0 = [R1]
  282 00000010 F040 0001       ORR              R0, R0, #0x01 ; enable Port A
  283 00000014 6008            STR              R0, [R1]    ; [R1] = R0
  284 00000016         
  285 00000016         ; disable UART
  286 00000016 4926            LDR              R1, =UART0_CTL_R 
                                                            ; R1 = &UART0_CTL_R
                                                            
  287 00000018 6808            LDR              R0, [R1]    ; R0 = [R1]
  288 0000001A F020 0001       BIC              R0, R0, #UART_CTL_UARTEN ; R0 =
                                                             R0&~UART_CTL_UARTE
                                                            N (disable UART)
  289 0000001E 6008            STR              R0, [R1]    ; [R1] = R0
  290 00000020         ; set the baud rate (equations on p845 of datasheet)
  291 00000020 4924            LDR              R1, =UART0_IBRD_R ; R1 = &UART0
                                                            _IBRD_R
  292 00000022         ; R0 = IBRD = int(16,000,000 / (16 * 115,200)) = int(8.6
                       805)
  293 00000022 F04F 0058       MOV              R0,#88      ; R0 = IBRD = int(5
                                                            0,000,000 / (16 * 1
                                                            15,200)) = int(27.1
                                                            267)
  294 00000026 6008            STR              R0, [R1]    ; [R1] = R0
  295 00000028 4923            LDR              R1, =UART0_FBRD_R ; R1 = &UART0
                                                            _FBRD_R
  296 0000002A         ; R0 = FBRD = int(0.6805 * 64 + 0.5) = 44.052
  297 0000002A F04F 002C       MOV              R0,#44      ; R0 = FBRD = int(0



ARM Macro Assembler    Page 8 


                                                            .1267 * 64 + 0.5) =
                                                             8
  298 0000002E 6008            STR              R0, [R1]    ; [R1] = R0
  299 00000030         ; configure Line Control Register settings
  300 00000030 4922            LDR              R1, =UART0_LCRH_R ; R1 = &UART0
                                                            _LCRH_R
  301 00000032 6808            LDR              R0, [R1]    ; R0 = [R1]
  302 00000034 F020 00FF       BIC              R0, R0, #0xFF ; R0 = R0&~0xFF (
                                                            clear all fields)
  303 00000038         ; 8 bit word length, no parity bits, one stop bit, FIFOs
                       
  304 00000038 F100 0070       ADD              R0, R0, #(UART_LCRH_WLEN_8+UART
_LCRH_FEN)
  305 0000003C 6008            STR              R0, [R1]    ; [R1] = R0
  306 0000003E         ; enable UART
  307 0000003E 491C            LDR              R1, =UART0_CTL_R 
                                                            ; R1 = &UART0_CTL_R
                                                            
  308 00000040 6808            LDR              R0, [R1]    ; R0 = [R1]
  309 00000042 F040 0001       ORR              R0, R0, #UART_CTL_UARTEN ; R0 =
                                                             R0|UART_CTL_UARTEN
                                                             (enable UART)
  310 00000046 6008            STR              R0, [R1]    ; [R1] = R0
  311 00000048         ; enable alternate function
  312 00000048 491D            LDR              R1, =GPIO_PORTA_AFSEL_R ; R1 = 
                                                            &GPIO_PORTA_AFSEL_R
                                                            
  313 0000004A 6808            LDR              R0, [R1]    ; R0 = [R1]
  314 0000004C F040 0003       ORR              R0, R0, #0x03 ; R0 = R0|0x03 (e
                                                            nable alt funct on 
                                                            PA1-0)
  315 00000050 6008            STR              R0, [R1]    ; [R1] = R0
  316 00000052         ; enable digital port
  317 00000052 491C            LDR              R1, =GPIO_PORTA_DEN_R ; R1 = &G
                                                            PIO_PORTA_DEN_R
  318 00000054 6808            LDR              R0, [R1]    ; R0 = [R1]
  319 00000056 F040 0003       ORR              R0, R0, #0x03 ; R0 = R0|0x03 (e
                                                            nable digital I/O o
                                                            n PA1-0)
  320 0000005A 6008            STR              R0, [R1]    ; [R1] = R0
  321 0000005C         ; configure as UART
  322 0000005C 491A            LDR              R1, =GPIO_PORTA_PCTL_R ; R1 = &
                                                            GPIO_PORTA_PCTL_R
  323 0000005E 6808            LDR              R0, [R1]    ; R0 = [R1]
  324 00000060 F020 00FF       BIC              R0, R0, #0x000000FF ; R0 = R0&~
                                                            0x000000FF (clear p
                                                            ort control field f
                                                            or PA1-0)
  325 00000064 F100 0011       ADD              R0, R0, #0x00000011 ; R0 = R0+0
                                                            x00000011 (configur
                                                            e PA1-0 as UART)
  326 00000068 6008            STR              R0, [R1]    ; [R1] = R0
  327 0000006A         ; disable analog functionality
  328 0000006A 4918            LDR              R1, =GPIO_PORTA_AMSEL_R ; R1 = 
                                                            &GPIO_PORTA_AMSEL_R
                                                            
  329 0000006C F04F 0000       MOV              R0, #0      ; R0 = 0 (disable a
                                                            nalog functionality
                                                             on PA)



ARM Macro Assembler    Page 9 


  330 00000070 6008            STR              R0, [R1]    ; [R1] = R0
  331 00000072         
  332 00000072 BD00            POP              {PC}
  333 00000074         
  334 00000074         ;BX   LR 
  335 00000074         
  336 00000074         ;------------UART_InChar------------
  337 00000074         ; input ASCII character from UART
  338 00000074         ; spin if no data available i
  339 00000074         ; Input: none
  340 00000074         ; Output: R0  character in from UART
  341 00000074         UART_ReadChar
  342 00000074 4916            LDR              R1,=UART0_FR_R
  343 00000076         
  344 00000076 680A    lp1     LDR              R2,[R1]     ; read FR
  345 00000078 F012 0210       ANDS             R2,#0x0010
  346 0000007C D1FB            BNE              lp1         ; wait until RXFE i
                                                            s 0
  347 0000007E 4915            LDR              R1,=UART0_DR_R
  348 00000080 6808            LDR              R0,[R1]     ; read DR
  349 00000082 4770            BX               LR
  350 00000084         
  351 00000084         ;------------UART_OutChar------------
  352 00000084         ; output ASCII character to UART
  353 00000084         ; spin if UART transmit FIFO is full
  354 00000084         ; Input: R0  character out to UART
  355 00000084         ; Output: none
  356 00000084         ; Modifies: R0, R1
  357 00000084         
  358 00000084         UART_WriteChar
  359 00000084 4912            LDR              R1,=UART0_FR_R
  360 00000086         
  361 00000086 680A    lp2     LDR              R2,[R1]     ; read FR
  362 00000088 F012 0220       ANDS             R2,#0x0020
  363 0000008C D1FB            BNE              lp2         ; wait until TXFF i
                                                            s 0
  364 0000008E 4911            LDR              R1,=UART0_DR_R
  365 00000090 6008            STR              R0,[R1]     ; write DR
  366 00000092 4770            BX               LR
  367 00000094         
  368 00000094         ;---------------------OutCRLF---------------------
  369 00000094         ; Output a CR,LF to UART to go to a new line
  370 00000094         ; Input: none
  371 00000094         ; Output: none
  372 00000094         newline
  373 00000094 B500            PUSH             {LR}        ; save current valu
                                                            e of LR
  374 00000096 F04F 000D       MOV              R0, #CR     ; R0 = CR (<carriag
                                                            e return>)
  375 0000009A F7FF FFFE       BL               UART_WriteChar ; send <carriage
                                                             return> to the UAR
                                                            T
  376 0000009E F04F 000A       MOV              R0, #LF     ; R0 = LF (<line fe
                                                            ed>)
  377 000000A2 F7FF FFFE       BL               UART_WriteChar ; send <line fee
                                                            d> to the UART
  378 000000A6 BD00            POP              {PC}
  379 000000A8                 ALIGN
  380 000000A8                 END



ARM Macro Assembler    Page 10 


              400FE618 
              400FE608 
              4000C030 
              4000C024 
              4000C028 
              4000C02C 
              40004420 
              4000451C 
              4000452C 
              40004528 
              4000C018 
              4000C000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\uart.d -o.\objects\uart.o -I.\RTE\_tm4c123 -IC:\Users
\Israel\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Users\I
srael\AppData\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --pred
efine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 528" --predefine="_RT
E_ SETA 1" --predefine="TM4C1230H6PM SETA 1" --list=.\listings\uart.lst uart.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 254 in file uart.s
   Uses
      None
Comment: .text unused
UART_Init 00000000

Symbol: UART_Init
   Definitions
      At line 272 in file uart.s
   Uses
      At line 257 in file uart.s
Comment: UART_Init used once
UART_ReadChar 00000074

Symbol: UART_ReadChar
   Definitions
      At line 341 in file uart.s
   Uses
      At line 258 in file uart.s
Comment: UART_ReadChar used once
UART_WriteChar 00000084

Symbol: UART_WriteChar
   Definitions
      At line 358 in file uart.s
   Uses
      At line 259 in file uart.s
      At line 375 in file uart.s
      At line 377 in file uart.s

lp1 00000076

Symbol: lp1
   Definitions
      At line 344 in file uart.s
   Uses
      At line 346 in file uart.s
Comment: lp1 used once
lp2 00000086

Symbol: lp2
   Definitions
      At line 361 in file uart.s
   Uses
      At line 363 in file uart.s
Comment: lp2 used once
newline 00000094

Symbol: newline
   Definitions
      At line 372 in file uart.s
   Uses
      None
Comment: newline unused
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BS 00000008

Symbol: BS
   Definitions
      At line 247 in file uart.s
   Uses
      None
Comment: BS unused
CR 0000000D

Symbol: CR
   Definitions
      At line 245 in file uart.s
   Uses
      At line 374 in file uart.s
Comment: CR used once
DEL 0000007F

Symbol: DEL
   Definitions
      At line 250 in file uart.s
   Uses
      None
Comment: DEL unused
ESC 0000001B

Symbol: ESC
   Definitions
      At line 248 in file uart.s
   Uses
      None
Comment: ESC unused
GPIO_PORTA_AFSEL_R 40004420

Symbol: GPIO_PORTA_AFSEL_R
   Definitions
      At line 206 in file uart.s
   Uses
      At line 312 in file uart.s
Comment: GPIO_PORTA_AFSEL_R used once
GPIO_PORTA_AMSEL_R 40004528

Symbol: GPIO_PORTA_AMSEL_R
   Definitions
      At line 208 in file uart.s
   Uses
      At line 328 in file uart.s
Comment: GPIO_PORTA_AMSEL_R used once
GPIO_PORTA_DEN_R 4000451C

Symbol: GPIO_PORTA_DEN_R
   Definitions
      At line 207 in file uart.s
   Uses
      At line 317 in file uart.s
Comment: GPIO_PORTA_DEN_R used once
GPIO_PORTA_PCTL_R 4000452C

Symbol: GPIO_PORTA_PCTL_R



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 209 in file uart.s
   Uses
      At line 322 in file uart.s
Comment: GPIO_PORTA_PCTL_R used once
LF 0000000A

Symbol: LF
   Definitions
      At line 246 in file uart.s
   Uses
      At line 376 in file uart.s
Comment: LF used once
NVIC_EN0_INT5 00000020

Symbol: NVIC_EN0_INT5
   Definitions
      At line 203 in file uart.s
   Uses
      None
Comment: NVIC_EN0_INT5 unused
NVIC_EN0_R E000E100

Symbol: NVIC_EN0_R
   Definitions
      At line 204 in file uart.s
   Uses
      None
Comment: NVIC_EN0_R unused
NVIC_PRI1_R E000E404

Symbol: NVIC_PRI1_R
   Definitions
      At line 205 in file uart.s
   Uses
      None
Comment: NVIC_PRI1_R unused
SPA 00000020

Symbol: SPA
   Definitions
      At line 249 in file uart.s
   Uses
      None
Comment: SPA unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 241 in file uart.s
   Uses
      At line 280 in file uart.s
Comment: SYSCTL_RCGCGPIO_R used once
SYSCTL_RCGCUART_R 400FE618

Symbol: SYSCTL_RCGCUART_R
   Definitions
      At line 242 in file uart.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 275 in file uart.s
Comment: SYSCTL_RCGCUART_R used once
UART0_CTL_R 4000C030

Symbol: UART0_CTL_R
   Definitions
      At line 215 in file uart.s
   Uses
      At line 286 in file uart.s
      At line 307 in file uart.s

UART0_DR_R 4000C000

Symbol: UART0_DR_R
   Definitions
      At line 210 in file uart.s
   Uses
      At line 347 in file uart.s
      At line 364 in file uart.s

UART0_FBRD_R 4000C028

Symbol: UART0_FBRD_R
   Definitions
      At line 213 in file uart.s
   Uses
      At line 295 in file uart.s
Comment: UART0_FBRD_R used once
UART0_FR_R 4000C018

Symbol: UART0_FR_R
   Definitions
      At line 211 in file uart.s
   Uses
      At line 342 in file uart.s
      At line 359 in file uart.s

UART0_IBRD_R 4000C024

Symbol: UART0_IBRD_R
   Definitions
      At line 212 in file uart.s
   Uses
      At line 291 in file uart.s
Comment: UART0_IBRD_R used once
UART0_ICR_R 4000C044

Symbol: UART0_ICR_R
   Definitions
      At line 219 in file uart.s
   Uses
      None
Comment: UART0_ICR_R unused
UART0_IFLS_R 4000C034

Symbol: UART0_IFLS_R
   Definitions
      At line 216 in file uart.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      None
Comment: UART0_IFLS_R unused
UART0_IM_R 4000C038

Symbol: UART0_IM_R
   Definitions
      At line 217 in file uart.s
   Uses
      None
Comment: UART0_IM_R unused
UART0_LCRH_R 4000C02C

Symbol: UART0_LCRH_R
   Definitions
      At line 214 in file uart.s
   Uses
      At line 300 in file uart.s
Comment: UART0_LCRH_R used once
UART0_RIS_R 4000C03C

Symbol: UART0_RIS_R
   Definitions
      At line 218 in file uart.s
   Uses
      None
Comment: UART0_RIS_R unused
UART_CTL_UARTEN 00000001

Symbol: UART_CTL_UARTEN
   Definitions
      At line 225 in file uart.s
   Uses
      At line 288 in file uart.s
      At line 309 in file uart.s

UART_FR_RXFE 00000010

Symbol: UART_FR_RXFE
   Definitions
      At line 222 in file uart.s
   Uses
      None
Comment: UART_FR_RXFE unused
UART_FR_RXFF 00000040

Symbol: UART_FR_RXFF
   Definitions
      At line 220 in file uart.s
   Uses
      None
Comment: UART_FR_RXFF unused
UART_FR_TXFF 00000020

Symbol: UART_FR_TXFF
   Definitions
      At line 221 in file uart.s
   Uses
      None
Comment: UART_FR_TXFF unused



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

UART_ICR_RTIC 00000040

Symbol: UART_ICR_RTIC
   Definitions
      At line 238 in file uart.s
   Uses
      None
Comment: UART_ICR_RTIC unused
UART_ICR_RXIC 00000010

Symbol: UART_ICR_RXIC
   Definitions
      At line 240 in file uart.s
   Uses
      None
Comment: UART_ICR_RXIC unused
UART_ICR_TXIC 00000020

Symbol: UART_ICR_TXIC
   Definitions
      At line 239 in file uart.s
   Uses
      None
Comment: UART_ICR_TXIC unused
UART_IFLS_RX1_8 00000000

Symbol: UART_IFLS_RX1_8
   Definitions
      At line 226 in file uart.s
   Uses
      None
Comment: UART_IFLS_RX1_8 unused
UART_IFLS_TX1_8 00000000

Symbol: UART_IFLS_TX1_8
   Definitions
      At line 227 in file uart.s
   Uses
      None
Comment: UART_IFLS_TX1_8 unused
UART_IM_RTIM 00000040

Symbol: UART_IM_RTIM
   Definitions
      At line 228 in file uart.s
   Uses
      None
Comment: UART_IM_RTIM unused
UART_IM_RXIM 00000010

Symbol: UART_IM_RXIM
   Definitions
      At line 231 in file uart.s
   Uses
      None
Comment: UART_IM_RXIM unused
UART_IM_TXIM 00000020

Symbol: UART_IM_TXIM



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 230 in file uart.s
   Uses
      None
Comment: UART_IM_TXIM unused
UART_LCRH_FEN 00000010

Symbol: UART_LCRH_FEN
   Definitions
      At line 224 in file uart.s
   Uses
      At line 304 in file uart.s
Comment: UART_LCRH_FEN used once
UART_LCRH_WLEN_8 00000060

Symbol: UART_LCRH_WLEN_8
   Definitions
      At line 223 in file uart.s
   Uses
      At line 304 in file uart.s
Comment: UART_LCRH_WLEN_8 used once
UART_RIS_RTRIS 00000040

Symbol: UART_RIS_RTRIS
   Definitions
      At line 232 in file uart.s
   Uses
      None
Comment: UART_RIS_RTRIS unused
UART_RIS_RXRIS 00000010

Symbol: UART_RIS_RXRIS
   Definitions
      At line 236 in file uart.s
   Uses
      None
Comment: UART_RIS_RXRIS unused
UART_RIS_TXRIS 00000020

Symbol: UART_RIS_TXRIS
   Definitions
      At line 234 in file uart.s
   Uses
      None
Comment: UART_RIS_TXRIS unused
42 symbols
386 symbols in table
